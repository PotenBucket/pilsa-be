# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI-CD with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build_dockerpush:
    runs-on: ubuntu-latest
    env:
      APPLICATION: ${{ secrets.APPLICATIONYML_DEV }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: make application.yml
      if: true 
      run: |
        cd ./src/main
        mkdir resources
        cd resources
        touch ./application.yml
        echo "${{ secrets.APPLICATIONYML_DEV }}" > ./application.yml
            
    - name: Build with Gradle
      run: ./gradlew build

    - name: Login to NCP Container Registry
      if: contains(github.ref, 'develop')
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.REGISTRY_INFO }}
        username: ${{ secrets.DOCKER_REGISTRY_ACCESS_KEY }}
        password: ${{ secrets.DOCKER_REGISTRY_SECRET_KEY }}

    - name: build and push
      if: contains(github.ref, 'develop')
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile-dev
        push: true
        tags: ${{ secrets.REGISTRY_INFO }}/pilsa-be
        cache-from: type=registry,ref=${{ secrets.REGISTRY_INFO }}/pilsa-be
        cache-to: type=inline
